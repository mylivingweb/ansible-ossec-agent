---
# tasks file for ossec-agent

- name: "Install the correct repository"
  include: "RedHat.yml"
  when: ansible_os_family == "RedHat"

- name: "Install the correct repository"
  include: "Debian.yml"
  when: ansible_os_family == "Debian"

- name: Set ossec deploy facts for RedHat
  set_fact:
    ossec_agent_config_filename: ossec-agent.conf
    ossec_init_name: ossec-hids
  when: ansible_os_family == "RedHat"

- name: Set ossec deploy facts for Debian
  set_fact:
    ossec_agent_config_filename: ossec.conf
    ossec_init_name: ossec
  when: ansible_os_family == "Debian"

- name: "Installing the ossec-agent.conf"
  template: src={{ role_path }}/templates/var-ossec-etc-ossec-agent.conf.j2
            dest=/var/ossec/etc/ossec.conf
            owner=root
            group=root
            mode=0400
  tags:
    - init
    - config

- name: "Check if client.keys exists"
  stat: path=/var/ossec/etc/client.keys
  register: check_keys
  tags:
    - config

# When provisioning a lot of agents, the following step may fail
# on the server. So we set ignore_errors to true
# You will need to set up ssl cert on your server to use the authd service
#
# openssl genrsa -out /var/ossec/etc/sslmanager.key 2048
# openssl req -new -x509 -key /var/ossec/etc/sslmanager.key -out /var/ossec/etc/sslmanager.cert -days 365
#
- name: "Starting auth daemon on server {{ ossec_server_name }}"
  shell: /var/ossec/bin/ossec-authd start
  when: ossec_managed_server and check_keys.stat.exists == false and ossec_server_name|default("") != ""
  delegate_to: "{{ ossec_server_name }}"
  ignore_errors: yes
  run_once: true
  tags:
    - config

- name: 'Please execute the following command on your ossec-server: "/var/ossec/bin/ossec-authd start"'
  pause: minutes=2
  when: ossec_managed_server and check_keys.stat.exists == false and ossec_server_name|default("") == ""

- name: "registering client"
  shell: /var/ossec/bin/agent-auth -m {{ ossec_server_ip }} -p 1515
         creates=/var/ossec/etc/client.keys
  tags:
    - config

# When provisioning a lot of agents, the following step may fail
# on the server. So we set ignore_errors to true
- name: "kill the auth-daemon on server {{ ossec_server_name }}"
  shell: /var/ossec/bin/ossec-control stop
  delegate_to: "{{ ossec_server_name }}"
  when: ossec_managed_server and check_keys.stat.exists == false and ossec_server_name|default("") != ""
  ignore_errors: yes
  run_once: true
  tags:
    - config

- name: 'Please execute the following command on your ossec-server: "service ossec-authd stop"'
  pause: minutes=1
  when: ossec_managed_server and check_keys.stat.exists == false and ossec_server_name|default("") == ""

- name: "Start ossec-remoted on server. If this is the first agent added it will not be running."
  shell: /var/ossec/bin/ossec-control start
  delegate_to: "{{ ossec_server_name }}"
  when: ossec_managed_server

- name: "Restarting ossec agent"
  shell: /var/ossec/bin/ossec-control stop

  - name: "Restart ossec-agent from systemctl"
  shell: systemctl restart ossec-agent
  when: ansible_os_family == "RedHat"
 